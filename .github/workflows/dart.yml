# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: chiabot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setupdart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Downloads dart sdk x64
        uses: wei/wget@v1
        with:
          args: -O dart-x64.zip https://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-x64-release.zip
      
      - name: Downloads dart sdk arm64
        uses: wei/wget@v1
        with:
          args: -O dart-arm64.zip https://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-arm64-release.zip
      
      - name: Decompresses dart-arm64.zip
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./dart-arm64.zip -d ./dart-aarch64
      
      - name: Decompresses dart-x64.zip
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./dart-x64.zip -d ./dart-x86_64

      - name: Set permissions
        run: |
             sudo chmod -R 755 dart-x86_64
             sudo chmod -R 755 dart-aarch64

      - name: Temporarily save dart-aarch64
        uses: actions/upload-artifact@v2
        with:
          name: dart-aarch64
          path: dart-aarch64
          retention-days: 1

      - name: Temporarily save dart-x86_64
        uses: actions/upload-artifact@v2
        with:
          name: dart-x86_64
          path: dart-x86_64
          retention-days: 1

  ubuntu:
    needs: setupdart
    runs-on: ubuntu-latest

    strategy:
      matrix:
        architecture: [x86_64, aarch64]
        format: [deb, rpm]        

    steps:

      - name: Retrieve saved dart sdk for ${{ matrix.architecture }}
        uses: actions/download-artifact@v2
        with:
          name: dart-${{ matrix.architecture }}
          path: dart-${{ matrix.architecture }}

      - name: Setup dev files
        run: |
             ./dart-${{ matrix.architecture }}/dart-sdk/bin/dart pub get
             ./dart-${{ matrix.architecture }}/dart-sdk/bin/dart run environment_config:generate
             mv .github/workflows/config.test .github/workflows/config.yaml
             mv .github/workflows/farmer.sh ./farmer.sh
             mv .github/workflows/harvester.sh ./harvester.sh
             mv .github/workflows/hpool.sh ./hpool.sh
             chmod +x ./farmer.sh
             chmod +x ./harvester.sh
             chmod +x ./hpool.sh
             mv config.json config.json.default

      - uses: uraimo/run-on-arch-action@v2.0.9
        name: Compile aarch64
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04
          run: |
               ./dart-${{ matrix.architecture }}/dart-sdk/bin/dart compile exe chiabot.dart
               mv chiabot.exe chiabot_arm64

      - name: Compile x86_64
        run: |
             ./dart-${{ matrix.architecture }}/dart-sdk/bin/dart compile exe chiabot.dart
             mv chiabot.exe chiabot_x86_64

      - name: Move selected binary
        run: |
             mv chiabot_${{ matrix.architecture }} chiabot
             chmod +x chiabot

      - name: Load .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: Compressing ${{ matrix.architecture }} .tar.gz
        run: tar -czvf ./chiabot_${{ env.version }}-linux-${{ matrix.architecture }}.tar.gz ./chiabot ./config.json ./farmer.sh ./harvester.sh ./hpool.sh

      - name: Build .${{ matrix.format }} file for ${{ matrix.architecture }}
        uses: kentik/pkg@v1.0.0-rc7
        with:
          distro: ubuntu20.04
          # Package name
          name: chiabot
          # Package version
          version: ${{ env.version }}
          arch: ${{ matrix.architecture }}
          format: ${{ matrix.format }}
          package: .github/package.yaml

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}-dev${{ env.GITHUB_RUN_NUMBER }}
          release_name: ${{ env.version }}-dev${{ env.GITHUB_RUN_NUMBER }}
          draft: true
          files: |
            ./chiabot_${{ env.version }}-1_${{ matrix.architecture }}.${{ matrix.format }}
            ./chiabot_${{ env.version }}-linux-${{ matrix.architecture }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.

  windowsAndMac:
    # A strategy is used to define various build environments this job will run.
    #
    # To say it simple, this will create 3 separate independent jobs which will
    # run on ubuntu, mac & windows.
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        architecture: [x64]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1
        with:
          architecture: ${{ matrix.architecture }}
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Generate EnvironmentConfig
        run: dart run environment_config:generate

      - name: Analyze project source
        run: dart analyze

      - name: Load .env file
        uses: xom9ikk/dotenv@v1.0.2

      - name: Building macOS release
        if: matrix.os == 'macos-latest'
        run: |
             mv .github/workflows/config.test .github/workflows/config.yaml
             mv .github/workflows/farmer.sh ./farmer.sh
             mv .github/workflows/harvester.sh ./harvester.sh
             chmod +x ./farmer.sh
             chmod +x ./harvester.sh
             mv .github/workflows/hpool.sh ./hpool.sh
             chmod +x ./hpool.sh
             dart compile exe chiabot.dart
             chmod +x chiabot.exe
             ./chiabot.exe harvester onetime
             mv chiabot.exe chiabot
             tar -czvf ./chiabot_${{ env.version }}-macOS-${{ matrix.architecture }}.tar.gz ./chiabot ./config.json ./farmer.sh ./harvester.sh ./hpool.sh
             
      - name: Building Windows release
        if: matrix.os == 'windows-latest'
        run: |
             mv .github/workflows/config.test .github/workflows/config.yaml
             dart compile exe chiabot.dart
             dart compile exe chiabot_harvester.dart
             dart compile exe chiabot_hpool.dart
             ./chiabot.exe harvester onetime
             move ./chiabot.exe ./farmer.exe
             move ./chiabot_hpool.exe ./hpool.exe
             move ./chiabot_harvester.exe ./harvester.exe
             
      - name: Created windows zip file
        shell: bash
        if: matrix.os == 'windows-latest'
        run: |
          # Pack files WINDOWS
          7z a -tzip "chiabot_${{ env.version }}-windows-${{ matrix.architecture }}.zip" "./*.exe" "./config.json"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}-dev${{ env.GITHUB_RUN_NUMBER }}
          release_name: ${{ env.version }}-dev${{ env.GITHUB_RUN_NUMBER }}
          draft: true
          files: |
            ./chiabot_${{ env.version }}-windows-${{ matrix.architecture }}.zip
            ./chiabot_${{ env.version }}-macOS-${{ matrix.architecture }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.
          
          
