# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: chiabot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  arm64:
  
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: wget
        uses: wei/wget@v1
        with:
          args: -O dart.zip https://storage.googleapis.com/dart-archive/channels/stable/release/2.12.4/sdk/dartsdk-linux-arm64-release.zip
      
      - name: Decompress
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./dart.zip -d .
          
      - uses: uraimo/run-on-arch-action@v2.0.9
        name: Building Linux Arm release
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04
          if: matrix.arch == 'arm64'
          run: |
             ls
             ./dart-sdk/bin/dart pub get
             mv .github/workflows/config.test .github/workflows/config.yaml
             ./dart-sdk/bin/dart compile exe chiabot.dart
             ./dart-sdk/bin/dart compile exe chiabot_harvester.dart
             chmod +x chiabot.exe
             chmod +x chiabot_harvester.exe
             mv chiabot.exe chiabot
             mv chiabot_harvester.exe chiabot_harvester
             mv config.json.default config.json
             tar -czvf ./chiabot-linux-arm64.tar.gz ./chiabot ./config.json ./chiabot_harvester
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Release ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: true
          files: |
            ./chiabot-linux-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.
  amd64:
    # A strategy is used to define various build environments this job will run.
    #
    # To say it simple, this will create 3 separate independent jobs which will
    # run on ubuntu, mac & windows.
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        architecture: [x64]
        
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1
        with:
          architecture: ${{ matrix.architecture }}
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Analyze project source
        run: dart analyze

      - name: Building Linux release
        if: matrix.os == 'ubuntu-latest' && matrix.architecture == 'x64'
        run: |
             mv .github/workflows/config.test .github/workflows/config.yaml
             dart compile exe chiabot.dart
             dart compile exe chiabot_harvester.dart
             chmod +x chiabot.exe
             chmod +x chiabot_harvester.exe
             ./chiabot.exe harvester onetime
             mv chiabot.exe chiabot
             mv chiabot_harvester.exe chiabot_harvester
             tar -czvf ./chiabot-linux-amd64.tar.gz ./chiabot ./config.json ./chiabot_harvester
        
      - name: Building macOS release
        if: matrix.os == 'macos-latest' && matrix.architecture == 'x64'
        run: |
             mv .github/workflows/config.test .github/workflows/config.yaml
             dart compile exe chiabot.dart
             dart compile exe chiabot_harvester.dart
             chmod +x chiabot.exe
             chmod +x chiabot_harvester.exe
             ./chiabot.exe harvester onetime
             mv chiabot.exe chiabot
             mv chiabot_harvester.exe chiabot_harvester
             tar -czvf ./chiabot-macOS-amd64.tar.gz ./chiabot ./config.json ./chiabot_harvester
             
      - name: Building Windows release
        if: matrix.os == 'windows-latest' && matrix.architecture == 'x64'
        run: |
             mv .github/workflows/config.test .github/workflows/config.yaml
             dart compile exe chiabot.dart
             dart compile exe chiabot_harvester.dart
             ./chiabot.exe harvester onetime
             move chiabot.exe chiabot-windows-amd64.exe
             move chiabot_harvester.exe chiabot_harvester-windows-amd64.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Release ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: true
          files: |
            ./chiabot-linux-amd64.tar.gz
            ./chiabot-macOS-amd64.tar.gz
            ./chiabot-windows-amd64.exe
            ./chiabot_harvester-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.
          
          
